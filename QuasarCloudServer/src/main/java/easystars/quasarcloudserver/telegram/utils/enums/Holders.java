package easystars.quasarcloudserver.telegram.utils.enums;

import easystars.quasarcloudserver.bigdata.mysql.models.User;
import easystars.quasarcloudserver.spring.management.busnes.Session;
import easystars.quasarcloudserver.spring.management.busnes.UserServes;
import easystars.quasarcloudserver.spring.management.busnes.object.Update;
import easystars.quasarcloudserver.telegram.system.Bot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;

import java.util.ArrayList;
import java.util.List;

public enum Holders {
    MENU("üíª –ú–µ–Ω—é üñ•"){
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:");
            User user = Bot.getUserRepository().findById(Long.parseLong(message.getChatId())).orElse(null);
            user.getClients().forEach(client -> UserServes.requestAdd(client, new Update(UpdateType.FULL_INFO)));
            message.setReplyMarkup(Keyboard.MENU.getKeyboard(user));
            return message;
        }
    },
    CERBERUS("üî• –¶–µ—Ä–±–µ—Ä üî•") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–¶–µ—Ä–±–µ—Ä - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–∑–≤–æ–ª—é—â–∞—è –∑–∞—â–∏—Ç–∏—Ç—å –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.\n" +
                    "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!");
            return message;
        }
    },
    INFO("–ò–Ω—Ñ–æ üåê") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            User user = Bot.getUserRepository().findById(Long.parseLong(message.getChatId())).orElse(null);
            user.getClients().forEach(client -> UserServes.requestAdd(client, new Update(UpdateType.FULL_INFO)));
            return null;
        }
    },
    ABOUT("–û –Ω–∞—Å ‚ùì") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ì–ª–∞–≤–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ - @quasar_infobot");
            return message;
        }
    },
    HOME("–î–æ–º–æ–π üè†") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
            message.setReplyMarkup(Keyboard.HOME.getKeyboard(session.getUser()));
            return message;
        }
    },
    ALL_CLIENT("–í—Å–µ üíª") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText(Message.OBT_VERSION_ONLY_SUPPORT.getMessage());
            return message;
        }
    },
    INFO_HOME("–ü–æ–º–æ—â—å ‚ìò") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("""
                    *–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
                    
                    *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è* - –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
                    *–§–∞–π–ª—ã* - –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ (–ë–µ—Ç—Ç–∞)
                    *–Ø—Ä–∫–æ—Å—Ç—å* - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ (–¢–æ–ª—å–∫–æ: –º–æ–Ω–æ–±–ª–æ–∫–∏, –Ω–æ—É—Ç–±—É–∫–∏)
                    *–ó–≤—É–∫* - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞
                    *–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞/–í—ã–∫–ª—é—á–µ–Ω–∏–µ* - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞/–í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö (–ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –Ω–∞ macOS)
                    *–ö–æ–º–∞–Ω–¥–∞ /say* - –ø—Ä–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç (–¢–æ–ª—å–∫–æ macOS –∏–ª–∏ Windows —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏)
                    *–ö–æ–º–∞–Ω–¥–∞ /run* - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
                    """);
            message.enableMarkdown(true);
            return message;
        }
    },
    INFORMATION_OS("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            User user = Bot.getUserRepository().findById(Long.parseLong(message.getChatId())).orElse(null);
            user.getClients().forEach(client -> UserServes.requestAdd(client, new Update(UpdateType.FULL_INFO)));
            return null;
        }
    },
    FILES("–§–∞–π–ª—ã") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /file, –Ω–∞–ø–∏—à–∏—Ç–µ *help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏");
            return message;
        }
    },
    BRIGHTNESS("–Ø—Ä–∫–æ—Å—Ç—å") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ö–ª–∏–µ–Ω—Ç: " + session.getCurrentClient().getIp() + "\n\n–ó–Ω–∞—á–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏: " + session.getBrightness());
            message.setReplyMarkup(InlineKeyboard.BRIGHTNESS.getKeyboard());
            return message;
        }
    },
    VOLUME("–ó–≤—É–∫") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ö–ª–∏–µ–Ω—Ç: " + session.getCurrentClient().getIp() + "\n\n–ó–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏: " + session.getVolume());
            message.setReplyMarkup(InlineKeyboard.VOLUME.getKeyboard());
            return message;
        }
    },
    RESTART("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            User user = Bot.getUserRepository().findById(Long.parseLong(message.getChatId())).orElse(null);
            user.getClients().forEach(client -> UserServes.requestAdd(client, new Update(UpdateType.RELOAD)));
            message.setText("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é...");
            return message;
        }
    },
    END_OF_WORK("–í—ã–∫–ª—é—á–µ–Ω–∏–µ") {
        @Override
        public SendMessage process(Session session, SendMessage message) {
            User user = Bot.getUserRepository().findById(Long.parseLong(message.getChatId())).orElse(null);
            user.getClients().forEach(client -> UserServes.requestAdd(client, new Update(UpdateType.SHUTDOWN)));
            message.setText("–í—ã–∫–ª—é—á–∞—é...");
            return message;
        }
    },
    VERSION_CONTROL("–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π"){
        @Override
        public SendMessage process(Session session, SendMessage message) {
            message.setText("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–µ—Ä—Å–∏–∏:\n\n–†–µ–ª–∏–∑ - 3.0.0\n\n–û–¢–ë(–æ—Ç–∫—Ä—ã—Ç—ã–π –±–µ—Ç–∞ —Ç–µ—Å—Ç) - 3.5.1\n\n–ó–¢–ë(–∑–∞–∫—Ä—ã—Ç—ã–π –±–µ—Ç–∞ —Ç–µ—Å—Ç) - 3.5.7\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –≤–µ—Ä—Å–∏–∏:\n\n–†–µ–ª–∏–∑ - 3.0.0\n\n–≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –û–¢–ë, –ó–ë–¢ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏");
            return message;
        }
    },
    ;

    String string;

    Holders(String string) {
        this.string = string;
    }

    public String getString() {
        return string;
    }

    public static List<String> getAll() {
        List<String> list = new ArrayList<>();
        for (Holders holder : Holders.values()) {
            list.add(holder.getString());
        }
        return list;
    }

    public static Holders getByString(String string) {
        for (Holders holder : Holders.values()) {
            if (holder.getString().equals(string)) return holder;
        }
        return null;
    }

    public abstract SendMessage process(Session session, SendMessage message);
}
